body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen",
    "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue",
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: #f0f2f5;
  color: #333;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
}

/* For screens between 1200px and 2560px, make container full-width */
@media (min-width: 1200px) and (max-width: 2560px) {
  .container {
    max-width: 100%;
    /* Adjust padding for edge-to-edge feel */
    padding-left: 40px;
    padding-right: 40px;
  }

  body {
    font-size: 20px;
  }
}

/* Header */
.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 20px 40px;
  background-color: #fff;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

/* Logo */
.logo {
  text-decoration: none;
  color: #333;
}
.logo-main {
  font-size: 1.75em;
  font-weight: bold;
  margin: 0;
}
.logo-sub {
  font-size: 1.25em;
  margin: 0 auto;
  border-top: 1px solid #ccc;
  border-color: #ccc;
}

/* Navbar */
.navbar ul {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  gap: 20px;
}
.navbar a {
  text-decoration: none;
  color: #555;
  font-weight: 500;
  padding: 5px 10px;
  border-radius: 5px;
  transition: background-color 0.3s;
}
.navbar a:hover,
.navbar a.active {
  background-color: #e9ecef;
}

/* Generic Block Styling */
.block {
  /* padding: 60px 20px;
  text-align: center;
  border-bottom: 1px solid #ddd; */
}

/* Hero Block */
.hero {
  /* position: relative; */
  /* height: 300px;
  display: flex;
  align-items: center;
  justify-content: center; */
  /* background-color: #ddd;
  background-image: url("../src/assets/cranes.jpg");
  background-size: cover;
  background-position: center; */
  z-index: 1;
  height: 500px;
  overflow: hidden;
  text-align: center;
  position: relative;
  color: white;
  text-shadow: 1px 1px 2px black;
}

.hero-content {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
}

.hero-parallax-image {
  background-image: url("../src/assets/oblaka.png");
  height: 100%;
  width: 100%;
  background-attachment: fixed;
  background-position: 0% 80%;
  background-repeat: no-repeat;
  background-size: cover;
}

.hero::before {
  /* Create the pseudo-element */
  content: ""; /* The pseudo-element must have content */
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;

  /* Apply a semi-transparent black background color to the pseudo-element */
  background-color: rgba(0, 0, 0, 0.2); /* This is your darkening layer */

  /* The z-index must be lower than the content's z-index */
  /* z-index: -1; */
}

.hero h1 {
  font-size: 2.5rem;
}

.social-links {
  position: absolute;
  bottom: 20px;
  right: 20px;
}
.social-links a {
  margin: 0 10px;
  color: #333;
  font-size: 24px; /* Adjust if using an icon font */
}

.social-links > a > img {
  height: 2rem;
}
.social-links > a > img:hover {
  /* A common way to change color on an SVG image is to use a filter. */
  /* This example creates a blue-like effect. You can generate filters for other colors online. */
  filter: invert(27%) sepia(99%) saturate(2323%) hue-rotate(225deg)
    brightness(102%) contrast(101%);
}

/* #youtube-icon {
  height: 40px;
} */

/* Description Block */
.description-block {
  display: flex;
  gap: 40px;
  align-items: center;
  font-size: 1.3rem;
  padding-bottom: 0;
  margin-bottom: 2rem;
  margin-top: 1rem;
}
.description-image {
  flex: 1;
  max-width: 50%;
  border-right: 1px #333 solid;
}
.description-image img {
  display: block;
  margin: 0 auto;
  /* height: 750px; */
  height: 675px;
  border-radius: 8px;
  transition: transform 0.5s ease-in-out;
  transform: rotateY(0deg);
}

@media screen and (max-width: 1600px) {
  .description-image img {
    height: 450px;
  }
}

/* .description-image:hover img {
  transform: rotateY(180deg);
} */
.description-text {
  flex: 1;
  text-align: left;
}

/* Skills Block */
.skills-block {
  display: flex;
  justify-content: space-between;
  gap: 20px;
  font-weight: bold;
  font-size: 1.25rem;
  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);
  text-align: center;
  padding-bottom: 20px;
}

.skills-block-wrapper h2 {
  text-align: center;
  font-size: 2rem;
  margin-top: 0;
}

.skills-block-wrapper {
  border-top: 1px solid #ccc;
}

.skill {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 20px;
  border-radius: 8px;
  border: 1px solid #ccc;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  min-height: 150px;
  padding: 2rem 0.5rem;
  color: white;
}
.skill img {
  color: white;
}

@media (min-width: 768px) {
  .skill {
    padding: 4rem 1rem;
  }
}

@media (min-width: 1300px) {
  .skill {
    padding: 6rem 1rem;
  }
  .skills-block {
    gap: 3rem;
  }
}
@media (min-width: 1920px) {
  .skill {
    padding: 8rem 1rem;
  }
  .skills-block {
    gap: 6rem;
  }
}

.skill-1 {
  background: url("assets/1stbg.png");
  background-size: cover;
  background-position: center;
}
.skill-2 {
  background: url("assets/2ndbg.png");
  background-size: cover;
  background-position: center;
}
.skill-3 {
  background: url("assets/3rdbg.png");
  background-size: cover;
  background-position: center;
}
.skill .icon {
  font-size: 48px; /* Adjust if using an icon font */
  margin-bottom: 15px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.skill .icon img {
  height: 5rem; /* Set a fixed height for the icon */
}

.projects-block {
  text-align: center;
}

.projects-block h2 {
  margin-top: 0;
  text-align: center;
}

.projects {
  width: 90%;
  margin: 0 auto;
  display: flex; /* Or whatever layout you need */
  gap: 40px; /* Space between albums */
  justify-content: space-between;
  margin-bottom: 20px;
}

.project-item {
  /* 1. Set the height for the block since it no longer has an <img> */
  aspect-ratio: 1 / 1;
  /* 2. Make them equally sized (Optional, but common in carousels/grids) */
  flex: 1;

  /* 3. Use the CSS variable to set the background image */
  background-image: var(--bg-img);

  /* 4. Background styling to make it look like a background */
  background-size: contain; /* Ensures the image covers the entire block */
  background-position: center; /* Centers the image within the block */
  background-repeat: no-repeat; /* Prevents image tiling */

  /* Optional: Add some styling for visibility or interaction */
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);

  /* Crucial for positioning the overlay */
  position: relative;
  overflow: hidden; /* Hides the overlay until it slides up */

  /* Optional: Smooth transition for hover effects */
  transition: transform 0.3s ease-in-out;
  cursor: pointer;
}

/* Optional: Slight lift effect on hover */
.project-item:hover {
  /* transform: scale(1.03); */
}

/* Styling for the overlay block */
.project-overlay {
  /* Positioning and size */
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;

  /* Set the initial height (e.g., 80px) and background color */
  height: 80px;
  background-color: rgba(60, 60, 60, 0.85); /* Semi-transparent dark grey */
  color: white;

  /* Content alignment */
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 10px 0;
  text-align: center;

  /* Initial state: position it entirely below the visible area */
  transform: translateY(100%);

  /* Make the transition smooth */
  transition: transform 0.4s ease-out;
}

/* The magic: move the overlay up when hovering over the parent item */
.project-item:hover .project-overlay {
  transform: translateY(
    0
  ); /* Move it back to its original position (bottom: 0) */
}

/* Styling for the text */
.project-title {
  font-weight: bold;
  margin: 0;
  font-size: 1.25em;
}

/* .project-description {
  margin: 5px 10px 0 10px;
  font-size: 1em;
  opacity: 0.8;
} */

/* Styling for the button */
.listen-button {
  /* Layout and Sizing */
  padding: 0.25em 1.25em;
  margin-top: 10px; /* Space between title and button */

  /* Appearance */
  background-color: #810270; /* A vibrant, eye-catching color (e.g., coral red) */
  color: white;
  border: none;
  border-radius: 10px; /* Rounded corners */

  /* Typography */
  font-family: inherit;
  font-size: 1em;
  font-weight: 600;
  text-decoration: none;
  letter-spacing: 0.5px;

  /* Interaction */
  cursor: pointer;

  /* Transition for smooth effects */
  transition: background-color 0.2s, transform 0.1s, box-shadow 0.2s;
}

/* Hover effect: Subtle glow and color change */
.listen-button:hover {
  background-color: #53034f; /* Lighter shade on hover */
  box-shadow: 0 4px 15px rgba(255, 107, 107, 0.4); /* Soft glow */
}

/* Active/Press effect: Makes the button feel responsive */
.listen-button:active {
  background-color: #e55a5a; /* Darker shade when pressed */
  transform: translateY(1px); /* Slight downward press movement */
  box-shadow: none; /* Remove shadow when pressed */
}

.show-reel-block {
  border-top: 1px solid #ccc;
  border-bottom: 1px solid #ccc;
  /* padding-top: 0; */
}

/* ShowReel Block */
.show-reel-video {
  width: 90%;
  display: block;
  margin: 0 auto;
  aspect-ratio: 160 / 67;
  border-radius: 8px;
  margin-bottom: 1rem;
}

.show-reel-block h2 {
  text-align: center;
  font-size: 2rem;
  margin-top: 0px;
}

.get-in-touch {
  /* Mimic the button's background and border */
  background-color: #f8f8f8; /* A light off-white, adjust if needed */
  border-radius: 25px; /* Adjust to match the button's rounded corners */
  padding: 12px 25px; /* Adjust padding to match the button's size */
  display: inline-block; /* Makes the div only as wide as its content */
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Subtle shadow like the button */

  /* Style the link inside to match the button's text */
  text-decoration: none; /* Remove underline from link */
  color: #333; /* Dark text color, adjust if needed */
  font-family: Arial, sans-serif; /* Example font, use the one from the button */
  font-size: 16px; /* Example font size, adjust if needed */
  font-weight: bold; /* If the button text is bold */
  text-transform: uppercase; /* If the button text is uppercase */

  /* Optional: Add a hover effect for a better user experience */
  transition: background-color 0.3s ease, box-shadow 0.3s ease;
}

.getInTouchParent {
  text-align: center;
  margin: 2rem auto;
}

.get-in-touch {
  background-color: rgb(0, 0, 0);
  color: white;
  font-size: 13px;
  padding: 0.75rem 2.5rem;
}

.get-in-touch:hover {
  /* Slightly darker on hover */
  background-color: #0f0052;
}

.get-in-touch a {
  color: inherit; /* Inherit color from parent div */
  text-decoration: none; /* Ensure link itself has no underline */
}

.music-samples-block {
  border-top: 1px solid #ddd;
}

.albums-container .albums {
  flex-wrap: wrap;
}

.albums-container h2 {
  text-align: center;
  font-size: 2rem;
  margin-bottom: 2rem;
}

.albums-block {
  text-align: center;
}

.albums {
  margin: 0 auto;
  display: flex; /* Or whatever layout you need */
  gap: 40px; /* Space between albums */
  width: 90%;
  justify-content: space-between;
  margin-bottom: 20px;
}

.album-item {
  /* 1. Set the height for the block since it no longer has an <img> */
  aspect-ratio: 1 / 1;

  /* 3. Use the CSS variable to set the background image */
  background-image: var(--bg-img);

  /* 4. Background styling to make it look like a background */
  background-size: contain; /* Ensures the image covers the entire block */
  background-position: center; /* Centers the image within the block */
  background-repeat: no-repeat; /* Prevents image tiling */

  /* Optional: Add some styling for visibility or interaction */
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);

  /* Crucial for positioning the overlay */
  position: relative;
  overflow: hidden; /* Hides the overlay until it slides up */

  /* Optional: Smooth transition for hover effects */
  transition: transform 0.3s ease-in-out;
  cursor: pointer;

  flex-basis: calc(
    25% - 40px
  ); /* Sets the ideal size before remaining space is distributed */
  flex-grow: 0; /* Prevents items from growing to fill extra space */
  flex-shrink: 0; /* Prevents items from shrinking */
}

/* Optional: Slight lift effect on hover */
.album-item:hover {
  /* transform: scale(1.03); */
}

/* Styling for the overlay block */
.album-overlay {
  /* Positioning and size */
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;

  /* Set the initial height (e.g., 80px) and background color */
  height: 80px;
  background-color: rgba(60, 60, 60, 0.85); /* Semi-transparent dark grey */
  color: white;

  /* Content alignment */
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 10px 0;
  text-align: center;

  /* Initial state: position it entirely below the visible area */
  transform: translateY(100%);

  /* Make the transition smooth */
  transition: transform 0.4s ease-out;
}

/* The magic: move the overlay up when hovering over the parent item */
.album-item:hover .album-overlay {
  transform: translateY(
    0
  ); /* Move it back to its original position (bottom: 0) */
}

/* Styling for the text */
.album-title {
  font-weight: bold;
  margin: 0;
  font-size: 1.1em;
}

.album-description {
  margin: 5px 10px 0 10px;
  font-size: 0.85em;
  opacity: 0.8;
}

.albums-container h2 {
  margin-top: 0.75rem;
}

.listen-button {
  padding-top: 2px;
}

.albumsHeader {
  /* Center the text within the h2 element */
  text-align: center;
  width: 90%;
  /* Position relative allows pseudo-elements to be positioned absolutely */
  position: relative;
  /* Add space around the text */
  padding: 0 10px;
  /* Match page background to "cut" the line */
  background-color: #f4f4f4; /* Should match the background color of the page */
  /* Set width and margin to center the h2 itself */
  width: fit-content;
  margin: 30px auto;
  font-family: "Bitter", serif;
}

.albumsHeader::before,
.albumsHeader::after {
  content: "";
  position: absolute;
  top: 50%; /* Center the line vertically */
  transform: translateY(-50%); /* Fine-tune the vertical centering */
  height: 1px;
  background-color: #333; /* Color of the line */
  width: calc(
    45vw - 5.5ch
  ); /* Use viewport width for a very long line 100%-80px */
  z-index: 1; /* Send the line behind the text */
}

@media (max-width: 1920px) {
  .albumsHeader::before,
  .albumsHeader::after {
    width: calc(45vw - 5.5ch);
  }
}

/* Position the lines on the left and right */
.albumsHeader::before {
  right: 100%; /* Start the line just before the text */
}

.albumsHeader::after {
  left: 100%; /* Start the line just after the text */
}

h2 {
  font-family: "Bitter", serif;
}

/* font-family: "Bitter", serif; */
